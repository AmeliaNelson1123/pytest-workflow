language: python
install:
  - pip install tox
matrix:
  include:
    # Test most recent editions of python 3
    - python: 3.5
      dist: xenial
      after_install:
        - pip install codacy-coverage
        - pip install codecov
      env: TOX_ENV=py35
      after_success:
        # Correct coverage xml for coverage services.
        - >
          bash -c 'set -eux;
          pkg_path=$(find .tox/py*/lib/python*/site-packages/pytest_workflow -maxdepth 0 -type d);
          sed -i "s:${pkg_path}:src/pytest_workflow:g" coverage.xml'
        - >
          bash -c ' if [[ -v CODACY_PROJECT_TOKEN ]]; then
          python-codacy-coverage -r coverage.xml;
          fi'
        - codecov
    - python: 3.6
      dist: xenial
      env: TOX_ENV=py36
    - python: 3.7
      dist: xenial
      env: TOX_ENV=py37
    - python: 3.5
      dist: xenial
      env: TOX_ENV=py3-docs
    - python: 3.5
      dist: xenial
      env: TOX_ENV=py3-snakemake
    - python: 3.6
      dist: xenial
      env: TOX_ENV=py3-snakemake
    - python: 3.6
      dist: xenial
      env: TOX_ENV=py3-cromwell
      before_install:
        # Install conda
        - export MINICONDA=${HOME}/miniconda
        - export PATH=${MINICONDA}/bin:${PATH}
        - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        - bash miniconda.sh -b -f -p ${MINICONDA}
        - conda config --set always_yes yes
        - conda config --add channels defaults
        - conda config --add channels bioconda
        - conda config --add channels conda-forge
        - conda env create -n my_env cromwell
        - source activate my_env
script:
    - tox -e $TOX_ENV

